# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
    environment: development
    tier: monitoring
  name: prometheus
  namespace: default
  annotations:
    prometheus.io/scrape: "true"
spec:
  selector:
    matchLabels:
      app: prometheus
      environment: development
      tier: monitoring
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
        environment: development
        tier: monitoring
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name: prometheus
        image: prom/prometheus:v2.55.0
        imagePullPolicy: IfNotPresent
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        #   limits:
        #     cpu: 100m
        #     memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 3306
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # env:
        # - name: MYSQL_DATABASE
        #   value: "wordpress"
        # - name: DB_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: myjob
        #       key: DB_HOST
        # - name: DB_HOST
        #   valueFrom:
        #     secretKeyRef:
        #       name: myjob
        #       key: MSSQL_SA_PASSWORD
        ports:
        - containerPort: 9090
          name: prometheus-port
        volumeMounts:
        - name: prometheus-db
          mountPath: /prometheus
        - name: prometheus-configuration
          mountPath: /etc/prometheus
          #subPath: prometheus.yml
      volumes:
        - name: prometheus-db
          persistentVolumeClaim:
            claimName: prometheus-db
          # hostPath:
          #   path: /mnt/disks/prometheus-db # this mounts the filesystem from host to pod
        - name: prometheus-configuration
          configMap:
            name: prometheus-configuration
      restartPolicy: Always
      serviceAccountName: prometheus
---

# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
  namespace: default
spec:
  selector:
    app: prometheus
    environment: development
    tier: monitoring
  type: NodePort
  ports:
  - name: wordpress
    protocol: TCP
    port: 9090 #service port
    targetPort: 9090 #container port
    nodePort: 30002 #host port
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-db
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-db
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  hostPath:
    path: /mnt/disks/prometheus-db
  claimRef:
    namespace: default  # Namespace where the PVC is defined
    name: prometheus-db # Name of the PVC
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
